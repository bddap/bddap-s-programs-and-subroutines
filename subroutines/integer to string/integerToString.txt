;inputs: a,b,c
;a = integer
;b = base, if b = 1 subroutine terminates immediately
;c = start of output string
;output: c
;c = end of string
;registers modified: a,c,x,y

:integerToString
	ife b,1			;failsafe
    		set pc,pop
	set y,sp		;save start sp for later
    :integerToStack
		set x,a		;x will be modified
        mod x,b		;find next digit
        set push,x	;push digit to stack
		div a,b		;prepares to check next digit
        ifn a,0		;1/10=0
        	set pc,integerToStack
    :stackToString
    	set [c],pop	;writes digit to string	
        add c,1		;increments through string memory
        ifn y,sp	;if sp =! start sp
	        set pc,stackToString
        sub c,1		;for output simplicity
        set pc pop
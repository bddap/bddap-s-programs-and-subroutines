;hardwareScan

:hardwareScan
    hwn i
:hardwareScanNextDevice
    std z,beginHardWareIndex
    hwq i
:hardwareScanLoop
	ife b,[z]
		ife  a,[z+1]
			set [z],i
	add z,2
    ifn z,endHardwareIndex
    	set pc,hardwareScanLoop
    ifn i,0
		set pc,hardwareScanNextDevice
    set pc,endHardWareIndex

    
:beginHardwareIndex
:keyboard dat 0x30cf
	:keyboardMem dat 0x7406
:lem dat 0x7349
	:lemMem dat 0xf615
:endHardwareIndex

set x,text  ;for appendToString
set [0x8000],0xf09d

;init lem
;requres hardwareScan
    set a,0
    set b,0x8000
    hwi [lem]
    set [lemMem],b

;getKey
;relies on hardwareScan

:getKey
    set a,1
    set c,0
    :getKeyLoop
    hwi [keyboard]
    ife c,0
        set pc,getKeyLoop
    ife c,0x10
        set pc,delete

;appendToString
;inputs
;c = word to append
;x = end of string

:appendToString
    set [x],c
    add x,1
    set [x],0x9d
    set pc,renderText

;delete
;inputs:
;x = end of string

:delete
    set [x],0
    sub x,1
    set [x],0x9d
    ;set pc,renderText

;renderText
;inputs:
;i = textStart
;j = renderStart


:renderText
    :wipeScreen
        set j,0x8000
        :wipeScreenLoop
        set [j],0
        ifl j,0x8180
            sti pc,wipeScreenLoop
    set j,0x8000
    set i,text
    :renderTextLoop
    ife [i],0x11
        set pc,nextLine
    set [j],[i]
    bor [j],0xf000  ;color code
    ifn [i+1],0
        sti pc,renderTextLoop
    set pc,getKey

;nextLine
;to be called from renderText
;i = screen location

:nextLine
    set b,j
    sub b,0x8000
    mod b,32
    sub j,b
    add j,31
    sti pc,renderTextLoop

;text
:text
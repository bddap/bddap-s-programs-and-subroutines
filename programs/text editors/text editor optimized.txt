jsr hardwareScan

:init
    :initLem
        set b,0x8000
        hwi [lem]
    set b,text
    set i,0x8000
    set [i],0xf01d

:getKey
    set a,1
    :getKeyLoop
    hwi [keyboard]
    ife c,0
        set pc,getKeyLoop
    
:deleteCursor
    set [i],0

:checkForPants
    ife c,0x11
        set pc,enter
    ife c,0x10
        set pc,backspace
    set pc,writeToLem

:enter
    set c,i
    mod c,32
    sub i,c
    add i,32
    set pc,cursor

:backspace
    sub i,1
    set [i],0
    set x,i
    mod x,32
    ifn x,31
        set pc,cursor
    :scanBack
       set x,i
       sub x,32
        :scanBackLoop
        ife i,x
            set pc,scanBackDone
        ife [i],0
            std pc,ScanBackLoop
        :scanBackDone
        add i,1
        set pc,cursor

:writeToLem
    set [i],c
    bor [i],0xe000
    add i,1

:cursor
    set [i],0xf01d

:storeKey
    set [b],c
    add b,1
    set c,0
    set pc,getKey

:hardwareScan
    hwn i
:hardwareScanNextDevice
	std z,beginHardWareIndex
    hwq i
:hardwareScanLoop
	ife b,[z]
		ife  a,[z+1]
			set [z],i
	add z,2
    ifn z,endHardwareIndex
    	set pc,hardwareScanLoop
    ifn i,0
		set pc,hardwareScanNextDevice
    set pc,pop

    
:beginHardwareIndex
:clock dat 0x12d0
	:clockMem dat 0xb402
:floppyDrive dat 0x4fd5
	:floppyDriveMem dat 0x24c5
:keyboard dat 0x30cf
	:keyboardMem dat 0x7406
:lem dat 0x7349
	:lemMem dat 0xf615
:sleepChamber dat 0x40e4
	:sleepChamberMem dat 0x1d9d
:vectorDisplay dat 0x42ba
	:vectorDisplayMem dat 0xbf3c
:endHardwareIndex

:text